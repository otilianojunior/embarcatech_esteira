#ifndef FONT_H
#define FONT_H
   
   
   
   // Fontes para A-Z, 0-9, letras min√∫sculas, caracteres especiais e acentos.
    // Cada caractere possui 8 bytes (8x8 pixels)
                            
static uint8_t font[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // [00] "Nothing" 
    0x3e, 0x41, 0x41, 0x49, 0x41, 0x41, 0x3e, 0x00, // [01] '0'
    0x00, 0x00, 0x42, 0x7f, 0x40, 0x00, 0x00, 0x00, // [02] '1'
    0x30, 0x49, 0x49, 0x49, 0x49, 0x46, 0x00, 0x00, // [03] '2'
    0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x36, 0x00, // [04] '3'
    0x3f, 0x20, 0x20, 0x78, 0x20, 0x20, 0x00, 0x00, // [05] '4'
    0x4f, 0x49, 0x49, 0x49, 0x49, 0x30, 0x00, 0x00, // [06] '5'
    0x3f, 0x48, 0x48, 0x48, 0x48, 0x48, 0x30, 0x00, // [07] '6'
    0x01, 0x01, 0x01, 0x61, 0x31, 0x0d, 0x03, 0x00, // [08] '7'
    0x36, 0x49, 0x49, 0x49, 0x49, 0x49, 0x36, 0x00, // [09] '8'
    0x06, 0x09, 0x09, 0x09, 0x09, 0x09, 0x7f, 0x00, // [10] '9'
    0x78, 0x14, 0x12, 0x11, 0x12, 0x14, 0x78, 0x00, // [11] 'A'
    0x7f, 0x49, 0x49, 0x49, 0x49, 0x49, 0x7f, 0x00, // [12] 'B'
    0x7e, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x00, // [13] 'C'
    0x7f, 0x41, 0x41, 0x41, 0x41, 0x41, 0x7e, 0x00, // [14] 'D'
    0x7f, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x00, // [15] 'E'
    0x7f, 0x09, 0x09, 0x09, 0x09, 0x01, 0x01, 0x00, // [16] 'F'
    0x7f, 0x41, 0x41, 0x41, 0x51, 0x51, 0x73, 0x00, // [17] 'G'
    0x7f, 0x08, 0x08, 0x08, 0x08, 0x08, 0x7f, 0x00, // [18] 'H'
    0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, // [19] 'I'
    0x21, 0x41, 0x41, 0x3f, 0x01, 0x01, 0x01, 0x00, // [20] 'J'
    0x00, 0x7f, 0x08, 0x08, 0x14, 0x22, 0x41, 0x00, // [21] 'K'
    0x7f, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, // [22] 'L'
    0x7f, 0x02, 0x04, 0x08, 0x04, 0x02, 0x7f, 0x00, // [23] 'M'
    0x7f, 0x02, 0x04, 0x08, 0x10, 0x20, 0x7f, 0x00, // [24] 'N'
    0x3e, 0x41, 0x41, 0x41, 0x41, 0x41, 0x3e, 0x00, // [25] 'O'
    0x7f, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e, 0x00, // [26] 'P'    
    0x3e, 0x41, 0x41, 0x49, 0x51, 0x61, 0x7e, 0x00, // [27] 'Q'
    0x7f, 0x11, 0x11, 0x11, 0x31, 0x51, 0x0e, 0x00, // [28] 'R'
    0x46, 0x49, 0x49, 0x49, 0x49, 0x30, 0x00, 0x00, // [29] 'S'   
    0x01, 0x01, 0x01, 0x7f, 0x01, 0x01, 0x01, 0x00, // [30] 'T'
    0x3f, 0x40, 0x40, 0x40, 0x40, 0x40, 0x3f, 0x00, // [31] 'U'
    0x0f, 0x10, 0x20, 0x40, 0x20, 0x10, 0x0f, 0x00, // [32] 'V'
    0x7f, 0x20, 0x10, 0x08, 0x10, 0x20, 0x7f, 0x00, // [33] 'W'
    0x00, 0x41, 0x22, 0x14, 0x14, 0x22, 0x41, 0x00, // [34] 'X'
    0x01, 0x02, 0x04, 0x78, 0x04, 0x02, 0x01, 0x00, // [35] 'Y'
    0x41, 0x61, 0x59, 0x45, 0x43, 0x41, 0x00, 0x00, // [36] 'Z'
    0x20, 0x54, 0x54, 0x54, 0x78, 0x00, 0x00, 0x00, // [37]  a
    0x7e, 0x48, 0x48, 0x48, 0x30, 0x00, 0x00, 0x00, // [38]  b
    0x38, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, // [39]  c
    0x30, 0x48, 0x48, 0x48, 0x7e, 0x00, 0x00, 0x00, // [40]  d
    0x38, 0x54, 0x54, 0x54, 0x58, 0x00, 0x00, 0x00, // [41]  e
    0x10, 0x7c, 0x12, 0x12, 0x04, 0x00, 0x00, 0x00, // [42]  f
    0x18, 0xa4, 0xa4, 0xa4, 0x78, 0x00, 0x00, 0x00, // [43]  g
    0x7e, 0x08, 0x08, 0x08, 0x70, 0x00, 0x00, 0x00, // [44]  h
    0x00, 0x00, 0x48, 0x7a, 0x40, 0x00, 0x00, 0x00, // [45]  i
    0x40, 0x80, 0x88, 0x7a, 0x00, 0x00, 0x00, 0x00, // [46]  j
    0x7e, 0x10, 0x10, 0x28, 0x44, 0x00, 0x00, 0x00, // [47]  k
    0x00, 0x00, 0x42, 0x7e, 0x40, 0x00, 0x00, 0x00, // [48]  l
    0x7c, 0x04, 0x38, 0x04, 0x7c, 0x00, 0x00, 0x00, // [49]  m
    0x7c, 0x04, 0x04, 0x04, 0x78, 0x00, 0x00, 0x00, // [50]  n
    0x38, 0x44, 0x44, 0x44, 0x38, 0x00, 0x00, 0x00, // [51]  o
    0xfc, 0x24, 0x24, 0x24, 0x18, 0x00, 0x00, 0x00, // [52]  p
    0x18, 0x24, 0x24, 0x24, 0xfc, 0x00, 0x00, 0x00, // [53]  q
    0x7c, 0x08, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, // [54]  r
    0x48, 0x54, 0x54, 0x54, 0x24, 0x00, 0x00, 0x00, // [55]  s
    0x04, 0x3e, 0x44, 0x44, 0x20, 0x00, 0x00, 0x00, // [56]  t
    0x3c, 0x40, 0x40, 0x20, 0x7c, 0x00, 0x00, 0x00, // [57]  u
    0x1c, 0x20, 0x40, 0x20, 0x1c, 0x00, 0x00, 0x00, // [58]  v
    0x7c, 0x40, 0x30, 0x40, 0x7c, 0x00, 0x00, 0x00, // [59]  w
    0x44, 0x28, 0x10, 0x28, 0x44, 0x00, 0x00, 0x00, // [60]  x
    0x1c, 0xa0, 0xa0, 0xa0, 0x7c, 0x00, 0x00, 0x00, // [61]  y
    0x44, 0x64, 0x54, 0x4c, 0x44, 0x00, 0x00, 0x00, // [62]  z
    0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00, // [63] '!'
    0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, // [64] '\'
    0x14, 0x7F, 0x14, 0x7F, 0x14, 0x00, 0x00, 0x00, // [65] '#'
    0x24, 0x2A, 0x7F, 0x2A, 0x12, 0x00, 0x00, 0x00, // [66] '$'
    0x23, 0x13, 0x08, 0x64, 0x62, 0x00, 0x00, 0x00, // [67] '%'
    0x36, 0x49, 0x55, 0x22, 0x50, 0x00, 0x00, 0x00, // [68] '&'
    0x00, 0x00, 0x07, 0x05, 0x00, 0x00, 0x00, 0x00, // [69] '''
    0x00, 0x1C, 0x22, 0x41, 0x00, 0x00, 0x00, 0x00, // [70] '('
    0x00, 0x41, 0x22, 0x1C, 0x00, 0x00, 0x00, 0x00, // [71] ')'
    0x14, 0x08, 0x3E, 0x08, 0x14, 0x00, 0x00, 0x00, // [72] '*'
    0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00, 0x00, // [73] '+'
    0x00, 0x50, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, // [74] ','
    0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, // [75] '-'
    0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, // [76] '.'
    0x00, 0x00, 0x24, 0x00, 0x24, 0x00, 0x00, 0x00, // [77] '.'
    0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0x00, 0x00, // [78] '/'
};


#endif